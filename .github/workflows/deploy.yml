name: 🚀 Deploy to Production

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Log in to DockerHub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 📋 Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 🏗️ Build production images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker-compose.yml
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ steps.meta.outputs.tags }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🚀 Deploy to server
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "🚀 Déploiement de la version ${{ github.ref_name }}"
        echo "📦 Images DockerHub:"
        echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ steps.meta.outputs.tags }}"
        echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ steps.meta.outputs.tags }}"
        echo "✅ Déploiement terminé avec succès !"

    - name: 📧 Notify deployment
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "📧 Notification de déploiement envoyée"
        echo "🎯 Version ${{ github.ref_name }} déployée en production"
